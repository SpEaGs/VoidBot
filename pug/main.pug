doctype html
html
    head
        include ./css/main-css.pug
        title VoidBot Dashboard
        include ./header.pug
    body
        script(src='/dash/node_modules/socket.io/client-dist/socket.io.js')
        #errPopup.popup.hidden
            .popupItem Error connecting to VoidBot. Attempting to reconnect...
        #popupNewGuild.popup.hidden
            .popupItem There has been an update to either the webpage or the bot. Please refresh your page.
        h2.pageTitle Home
        .mainContentContainer
            .mainArticle
                h2 Welcome to VoidBot's Web UI!
                script#u(u=user).
                    let thisScript = document.getElementById('u')
                    let user = JSON.parse(thisScript.getAttribute('u'));
                    setTimeout( () => {thisScript.removeAttribute('u');}, 2000);
                    const socket = io(`http://${window.location.hostname}:7777`);
                    socket.once('connect', () => {
                        socket.emit('getBotInfo', user.guilds.member);
                    });
                    socket.on('connect_error', (err) => {
                        console.log('Connection Error: (Will attempt to reconnect)');
                        console.warn(err);
                        document.getElementById('errPopup').classList.remove('hidden');
                    });
                    socket.on('reconnect', (n) => {
                        console.log(`Reconnected after ${n} attempts.`);
                        document.getElementById('errPopup').classList.add('hidden');
                    });

                    let volTimeout = false;

                    function addGuild(bot) {
                        let ctrl = document.createElement('div');
                            ctrl.id = `gCtrl${bot.guildID}`;
                            ctrl.classList.add('guildController');
                        let ttx = document.createElement('h3');
                            ttx.id = `gcTitleText${bot.guildID}`;
                            ttx.classList.add('gcTitleText');
                            ttx.innerText = bot.guildName;
                            ctrl.appendChild(ttx);
                        let vcdd = document.createElement('div');
                            vcdd.id = `gcVCDropdown${bot.guildID}`;
                            vcdd.classList.add('gcVCDropdown');
                            vcdd.innerText = 'Active Voice Channel:';
                            let vddb = document.createElement('div');
                                vddb.id = `gcVCDropdownButton${bot.guildID}`;
                                vddb.classList.add('gcVCDropdownButton');
                                vddb.innerText = 'None';
                                vddb.onclick = () => {document.getElementById(`gcVCDropdownContent${bot.guildID}`).classList.toggle('hidden')};
                                vcdd.appendChild(vddb);
                            let vddc = document.createElement('div');
                                vddc.id = `gcVCDropdownContent${bot.guildID}`;
                                vddc.classList.add('gcVCDropdownContent');
                                vddc.classList.add('hidden');
                                for (let i of bot.voiceChannelArray) {
                                    if (bot.voiceChannel && i.id == bot.voiceChannel.id) {
                                        vddb.innerText = i.name;
                                    }
                                    else {
                                        let vddci = document.createElement('div');
                                            vddci.id = `gcVCDropdownItem${bot.guildID}_${i.id}`;
                                            vddci.classList.add('gcVCDropdownItem');
                                            vddci.innerText = i.name;
                                            vddci.onclick = () => {ddSelect(bot, 'VC', i.name)};
                                            vddc.appendChild(vddci);
                                    }
                                }
                                vcdd.appendChild(vddc);
                            let lvbtn = document.createElement('div');
                                lvbtn.id = `gcVCLeave${bot.guildID}`;
                                lvbtn.classList.add('gcVCLeave');
                                lvbtn.innerText = 'Leave';
                                lvbtn.onclick = () => {vcLeave(bot)};
                                if (!bot.voiceChannel) lvbtn.classList.add('hidden');
                                vcdd.appendChild(lvbtn);
                            ctrl.appendChild(vcdd);
                        let nwp = document.createElement('div');
                            nwp.id = `gcNowPlay${bot.guildID}`;
                            nwp.classList.add('gcNowPlay');
                        let vol = document.createElement('div');
                            vol.id = `gcVol${bot.guildID}`;
                            vol.classList.add('gcVol');
                            let voli = document.createElement('input');
                                voli.id = `gcVolInput${bot.guildID}`;
                                voli.classList.add('slider');
                                voli.type = 'range';
                                voli.min = '0';
                                voli.max = '100';
                                voli.value = bot.defaultVolume;
                                voli.oninput = () => {document.getElementById(`gcVolText${bot.guildID}`).innerText = document.getElementById(`gcVolInput${bot.guildID}`).value};
                                voli.onchange = () => {
                                    if(!volTimeout) {
                                        volTimeout = setTimeout(() => {volInput(bot)}, 1000);
                                    }
                                    else {
                                        clearTimeout(volTimeout)
                                        volTimeout = setTimeout(() => {volInput(bot, volTimeout)}, 1000);
                                    }
                                };
                            let voltxt = document.createElement('div');
                                voltxt.id = `gcVolText${bot.guildID}`;
                                voltxt.classList.add('gcVolText');
                                voltxt.innerText = voli.value;
                                vol.appendChild(voli);
                                vol.appendChild(voltxt);
                        let pcc = document.createElement('div');
                            pcc.id = `pCC${bot.guildID}`;
                            pcc.classList.add('pCtrlContainer');
                            let skp = document.createElement('div');
                                skp.id = `gcSkip${bot.guildID}`;
                                skp.classList.add('gcPCB');
                                skp.innerText = 'Skip';
                                skp.onclick = () => {skipSong(bot)};
                                pcc.appendChild(skp);
                            let pspl = document.createElement('div');
                                pspl.id = `gcPsPl${bot.guildID}`;
                                pspl.classList.add('gcPCB');
                                if (bot.paused) {
                                    pspl.innerText = 'Resume';
                                }
                                else {pspl.innerText = 'Pause'};
                                pspl.onclick = () => {pausePlay(bot)};
                                pcc.appendChild(pspl);
                            let stp = document.createElement('div');
                                stp.id = `gcStop${bot.guildID}`;
                                stp.classList.add('gcPCB');
                                stp.innerText = 'Stop';
                                stp.onclick = () => {stop(bot)};
                                pcc.appendChild(stp);
                            if (!bot.nowPlaying) {
                                nwp.innerText = 'Now Playing:\nNothing.';
                                vol.classList.add('hidden');
                                pcc.classList.add('hidden');
                            }
                            else {nwp.innerText = `Now Playing:\n${bot.nowPlaying.videoDetails.title} [${parseInt(bot.nowPlaying.videoDetails.lengthSeconds / 60)}:${(bot.nowPlaying.videoDetails.lengthSeconds % 60).toString().padStart(2, "0")}]\n(added by: ${bot.nowPlaying.added_by})`};
                            ctrl.appendChild(nwp);
                            ctrl.appendChild(vol);
                            ctrl.appendChild(pcc);
                        let aqu = document.createElement('div');
                            aqu.id = `gcAudioQ${bot.guildID}`;
                            aqu.classList.add('gcAudioQ');
                            aqu.innerText = 'Queue:';
                            let ol = document.createElement('ol');
                                ol.id = `gcAudioQOL${bot.guildID}`;
                                ol.style = "max-height: 166px; overflow:auto; padding-left: 22px; margin: 0px; margin-top: 1em;";
                                if (bot.audioQueue.length == 0) {
                                    aqu.innerText = 'Queue is Empty.';
                                }
                                else {
                                    for (let i of bot.audioQueue) {
                                        let qi = document.createElement('li');
                                            qi.id = `gcAudioQI${bot.guildID}-${bot.audioQueue.indexOf(i)}`;
                                            qi.classList.add('gcAudioQI');
                                            qi.innerText = `${i.videoDetails.title}\n(added by: ${i.added_by})`;
                                            ol.appendChild(qi);
                                        let rem = document.createElement('div');
                                            rem.id = `gcAudioQIRem${bot.guildID}-${bot.audioQueue.indexOf(i)}`;
                                            rem.classList.add('gcAudioQIRem');
                                            rem.innerText = '-';
                                            rem.onclick = () => {remSong(bot, bot.audioQueue.indexOf(i))};
                                            ol.appendChild(rem);
                                    }
                                }
                                aqu.appendChild(ol);
                            ctrl.appendChild(aqu);
                        let sin = document.createElement('input');
                            sin.id = `gcSongInput${bot.guildID}`;
                            sin.type = 'text';
                            sin.classList.add('gcSongInput');
                            sin.placeholder = 'YT/SC link or YT search terms:';
                            ctrl.appendChild(sin);
                        let add = document.createElement('div');
                            add.id = `gcSongAdd${bot.guildID}`;
                            add.classList.add('gcSongAdd');
                            add.innerText = '+';
                            add.onclick = () => {addSong(bot, user);};
                            ctrl.appendChild(add);
                        document.getElementById('guildControlsContainer').appendChild(ctrl);
                        document.addEventListener('keypress', (e) => {
                            if (e.keyCode == 13 && document.hasFocus(document.getElementById(`gcSongInput${bot.guildID}`))) {
                                document.getElementById(`gcSongAdd${bot.guildID}`).click();
                            }
                        });
                    };

                    function ddSelect(bot, type, chan){
                        switch (type) {
                            case 'VC': {
                                console.log(chan)
                                let toSend = {
                                    control: 'join',
                                    data: {
                                        value: chan,
                                        snowflake: user.id
                                    },
                                    bot: bot
                                }
                                socket.emit('gControls', toSend);
                                break;
                            }
                            case 'TC': {
                                break;
                            }
                        }
                    }
                    function vcLeave(bot) {
                        let toSend = {
                            control: 'leave',
                            data: {
                                snowflake: user.id
                            },
                            bot: bot
                        }
                        socket.emit('gControls', toSend);
                    }
                    function addSong(bot, user) {
                        let el = document.getElementById(`gcSongInput${bot.guildID}`);
                        let value = el.value;
                        if (!value) return;
                        let toSend = {
                            control: 'play',
                            data: {
                                value: value,
                                snowflake: user.id
                            },
                            bot: bot
                        }
                        socket.emit('gControls', toSend);
                        el.value = '';
                    }
                    function remSong(bot, index) {
                        let toSend = {
                            control: 'wrongsong',
                            data: {
                                value: index+1,
                                snowflake: user.id
                            },
                            bot: bot
                        }
                        socket.emit('gControls', toSend);
                    }
                    function skipSong(bot) {
                        let toSend = {
                            control: 'skip',
                            data: {
                                snowflake: user.id
                            },
                            bot: bot
                        }
                        socket.emit('gControls', toSend);
                    }
                    function pausePlay(bot) {
                        let toSend = {
                            control: 'pausePlay',
                            data: {
                                snowflake: user.id
                            },
                            bot: bot
                        }
                        socket.emit('gControls', toSend);
                    }
                    function stop(bot) {
                        let toSend = {
                            control: 'stop',
                            data: {
                                snowflake: user.id
                            },
                            bot: bot
                        }
                        socket.emit('gControls', toSend);
                    }
                    function volInput(bot, timeout) {
                        let toSend = {
                            control: 'volume',
                            data: {
                                value: document.getElementById(`gcVolInput${bot.guildID}`).value,
                                snowflake: user.id
                            },
                            bot: bot
                        }
                        socket.emit('gControls', toSend);
                        timeout = false;
                    }

                    function updateInfo(bot) {
                        let lvbtn = document.getElementById(`gcVCLeave${bot.guildID}`);
                        let vddb = document.getElementById(`gcVCDropdownButton${bot.guildID}`);
                        let vddc = document.getElementById(`gcVCDropdownContent${bot.guildID}`);
                        let nwp = document.getElementById(`gcNowPlay${bot.guildID}`);
                        let vol = document.getElementById(`gcVol${bot.guildID}`);
                        let voli = document.getElementById(`gcVolInput${bot.guildID}`);
                        let voltxt = document.getElementById(`gcVolText${bot.guildID}`);
                        let pcc = document.getElementById(`pCC${bot.guildID}`);
                        let pspl = document.getElementById(`gcPsPl${bot.guildID}`);
                        let ol = document.getElementById(`gcAudioQOL${bot.guildID}`);
                        let aqu = ol.parentNode;
                        vddb.innerText = 'None';
                        vddc.innerHTML = '';
                        if (!bot.voiceChannel) {lvbtn.classList.add('hidden')}
                        else {lvbtn.classList.remove('hidden')};
                        for (let i of bot.voiceChannelArray) {
                            if (bot.voiceChannel && i.id == bot.voiceChannel.id) {
                                vddb.innerText = i.name;
                            }
                            else {
                                let vddci = document.createElement('div');
                                    vddci.id = `gcVCDropdownItem${bot.guildID}_${i.id}`;
                                    vddci.classList.add('gcVCDropdownItem');
                                    vddci.innerText = i.name;
                                    vddci.onclick = () => {ddSelect(bot, 'VC', i)};
                                    vddc.appendChild(vddci);
                            }
                        }
                        if (!bot.nowPlaying) {
                            nwp.innerText = 'Now Playing:\nNothing.';
                            vol.classList.add('hidden');
                            voli.value = bot.defaultVolume;
                            voltxt.innerText = bot.defaultVolume;
                            pcc.classList.add('hidden');
                        }
                        else {
                            nwp.innerText = `Now Playing:\n${bot.nowPlaying.videoDetails.title} [${parseInt(bot.nowPlaying.videoDetails.lengthSeconds / 60)}:${(bot.nowPlaying.videoDetails.lengthSeconds % 60).toString().padStart(2, "0")}]\n(added by: ${bot.nowPlaying.added_by})`;
                            vol.classList.remove('hidden');
                            voli.value = bot.defaultVolume;
                            voltxt.innerText = bot.defaultVolume;
                            pcc.classList.remove('hidden');
                            if (bot.paused) {
                                pspl.innerText = 'Resume';
                            }
                            else {pspl.innerText = 'Pause'};
                        };
                        if (bot.audioQueue.length == 0) {
                            ol.innerHTML = '';
                            let olParent = ol.parentNode;
                            olParent.innerText = 'Queue is Empty.';
                            olParent.appendChild(ol);
                        }
                        else {
                            aqu.innerText = 'Queue:';
                            ol.innerHTML = '';
                            for (let i of bot.audioQueue) {
                                let qi = document.createElement('li');
                                    qi.id = `gcAudioQI${bot.audioQueue.indexOf(i)}`;
                                    qi.classList.add('gcAudioQI');
                                    qi.innerText = `${i.videoDetails.title}\n(added by: ${i.added_by})`;
                                    ol.appendChild(qi);
                                let rem = document.createElement('div');
                                    rem.id = `gcAudioQIRem${bot.guildID}-${bot.audioQueue.indexOf(i)}`;
                                    rem.classList.add('gcAudioQIRem');
                                    rem.innerText = '-';
                                    rem.onclick = () => {remSong(bot, bot.audioQueue.indexOf(i))};
                                    ol.appendChild(rem);
                            }
                            aqu.appendChild(ol);
                        }
                    };
                    socket.once('sendBotInfo', (bots) => {
                        for (let b of bots) {
                            setTimeout(addGuild(b), 200);
                        };
                        socket.on('sendBotInfo', (info) => {
                            for (let i of info) {
                                updateInfo(i);
                            }
                        });
                    });
                    socket.on('new-guild', () => {
                        document.getElementById(popupNewGuild).classList.toggle('hidden');
                    });
                    socket.on('rem-client', (guildID) => {
                        let e = document.getElementById(`gCtrl${guildID}`);
                        e.parentNode.removeChild(e);
                    });
                    window.onclick = (e) => {
                        if (!e.target.matches('.gcVCDropdownButton')) {
                            let dropdowns = document.getElementsByClassName('gcVCDropdownContent');
                            for (let i = 0; i < dropdowns.length; i++) {
                                dropdowns[i].classList.add('hidden');
                            }
                        }
                    }
            a.articleButton(href='/dash/admin')
                .navlinkText Admin Panel
            h2 Guild Controls:
            .articleItem#guildControlsContainer

    footer
        include ./footer.pug