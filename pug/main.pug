doctype html
html
    head
        include ./css/main-css.pug
        title VoidBot Dashboard
        include ./header.pug
    body
        script(src='/dash/node_modules/socket.io-client/dist/socket.io.dev.js')
        #errPopup.popup.hidden
            .popupItem Error connecting to VoidBot. Attempting to reconnect...
        #popupNewGuild.popup.hidden
            .popupItem There has been an update to either the webpage or the bot. Please refresh your page.
        h2.pageTitle Home
        .mainContentContainer
            .mainArticle
                h2 Welcome to VoidBot's Web UI!
                h3 There's not much to see here right now since there are few working features for non-admin users yet...
                h3 But if you ARE an admin, you can click the button below to jump right to the admin panel!
                script#u(u=user).
                    let thisScript = document.getElementById('u')
                    let user = JSON.parse(thisScript.getAttribute('u'));
                    setTimeout( () => {thisScript.removeAttribute('u');}, 2000);
                    const socket = io(`http://${window.location.hostname}:7777`);
                    socket.once('connect', () => {
                        socket.emit('getBotInfo', user.guilds.member);
                    });
                    socket.on('connect_error', (err) => {
                        console.log('Connection Error: (Will attempt to reconnect)');
                        console.warn(err);
                        document.getElementById('errPopup').classList.remove('hidden');
                    });
                    socket.on('reconnect', (n) => {
                        console.log(`Reconnected after ${n} attempts.`);
                        document.getElementById('errPopup').classList.add('hidden');
                    });

                    let volTimeout = false;

                    function addGuild(bot) {
                        let ctrl = document.createElement('div');
                            ctrl.id = `gCtrl${bot.guildID}`;
                            ctrl.classList.add('guildController');
                        let ttx = document.createElement('h3');
                            ttx.id = `gcTitleText${bot.guildID}`;
                            ttx.classList.add('gcTitleText');
                            ttx.innerText = bot.guildName;
                            ctrl.appendChild(ttx);
                        let nwp = document.createElement('div');
                            nwp.id = `gcNowPlay${bot.guildID}`;
                            nwp.classList.add('gcNowPlay');
                        let vol = document.createElement('div');
                            vol.id = `gcVol${bot.guildID}`;
                            vol.classList.add('gcVol');
                            let voli = document.createElement('input');
                                voli.id = `gcVolInput${bot.guildID}`;
                                voli.classList.add('slider');
                                voli.type = 'range';
                                voli.min = '0';
                                voli.max = '100';
                                voli.value = bot.defaultVolume;
                                voli.oninput = () => {
                                    voltxt.innerText = voli.value;
                                    if(!volTimeout) {
                                        volTimeout = setTimeout(() => {volInput(bot)}, 1000);
                                    }
                                    else {
                                        clearTimeout(volTimeout)
                                        volTimeout = setTimeout(() => {volInput(bot, volTimeout)}, 1000);
                                    }
                                };
                            let voltxt = document.createElement('div');
                                voltxt.id = `gcVolText${bot.guildID}`;
                                voltxt.classList.add('gcVolText');
                                voltxt.innerText = voli.value;
                                vol.appendChild(voli);
                                vol.appendChild(voltxt);
                        let skp = document.createElement('div');
                            skp.id = `gcSkip${bot.guildID}`;
                            skp.classList.add('gcSkip');
                            skp.innerText = 'Skip';
                            skp.onclick = () => {skipSong(bot)};
                            if (!bot.nowPlaying) {
                                nwp.innerText = 'Now Playing:\nNothing.';
                                vol.classList.add('hidden');
                                skp.classList.add('hidden');
                            }
                            else {nwp.innerText = `Now Playing:\n${bot.nowPlaying.videoDetails.title} [${parseInt(bot.nowPlaying.videoDetails.lengthSeconds / 60)}:${(bot.nowPlaying.videoDetails.lengthSeconds % 60).toString().padStart(2, "0")}]\n(added by: ${bot.nowPlaying.added_by})`};
                            ctrl.appendChild(nwp);
                            ctrl.appendChild(vol);
                            ctrl.appendChild(skp);
                        let aqu = document.createElement('div');
                            aqu.id = `gcAudioQ${bot.guildID}`;
                            aqu.classList.add('gcAudioQ');
                            aqu.innerText = 'Queue:';
                            let ol = document.createElement('ol');
                                ol.id = `gcAudioQOL${bot.guildID}`
                                ol.style = "max-height: 176px; overflow:auto; padding-left: 20px;";
                                if (bot.audioQueue.length == 0) {
                                    aqu.innerText = 'Queue is Empty.';
                                }
                                else {
                                    for (let i of bot.audioQueue) {
                                        let qi = document.createElement('li');
                                            qi.id = `gcAudioQI${bot.audioQueue.indexOf(i)}`;
                                            qi.classList.add('gcAudioQI');
                                            qi.innerText = `${i.videoDetails.title}\n(added by: ${i.added_by})`;
                                            ol.appendChild(qi);
                                    }
                                }
                                aqu.appendChild(ol);
                            ctrl.appendChild(aqu);
                        let url = document.createElement('input');
                            url.id = `gcURLInput${bot.guildID}`;
                            url.type = 'url';
                            url.classList.add('gcURLInput');
                            url.placeholder = 'Youtube or SoundCloud link here';
                            ctrl.appendChild(url);
                        let add = document.createElement('div');
                            add.id = `gcSongAdd${bot.guildID}`;
                            add.classList.add('gcSongAdd');
                            add.innerText = '+';
                            add.onclick = () => {addSong(bot, user);};
                            ctrl.appendChild(add);
                        document.getElementById('guildControlsContainer').appendChild(ctrl);
                    };

                    function addSong(bot, user) {
                        let el = document.getElementById(`gcURLInput${bot.guildID}`);
                        let url = el.value;
                        if (!url) return;
                        let toSend = {
                            control: 'addSong',
                            data: {
                                username: user.name,
                                url: url
                            },
                            bot: bot
                        }
                        socket.emit('gControls', toSend);
                        el.value = '';
                    }
                    function skipSong(bot) {
                        let toSend = {
                            control: 'skip',
                            bot: bot
                        }
                        socket.emit('gControls', toSend);
                    }
                    function volInput(bot, timeout) {
                        let toSend = {
                            control: 'vol',
                            bot: bot,
                            value: document.getElementById(`gcVolInput${bot.guildID}`).value
                        }
                        socket.emit('gControls', toSend);
                        timeout = false;
                    }

                    function updateInfo(bot) {
                        let nwp = document.getElementById(`gcNowPlay${bot.guildID}`);
                        let vol = document.getElementById(`gcVol${bot.guildID}`);
                        let voli = document.getElementById(`gcVolInput${bot.guildID}`);
                        let voltxt = document.getElementById(`gcVolText${bot.guildID}`);
                        let skp = document.getElementById(`gcSkip${bot.guildID}`);
                        let ol = document.getElementById(`gcAudioQOL${bot.guildID}`);
                        if (!bot.nowPlaying) {
                            nwp.innerText = 'Now Playing:\nNothing.';
                            vol.classList.add('hidden');
                            skp.classList.add('hidden');
                        }
                        else {
                            nwp.innerText = `Now Playing:\n${bot.nowPlaying.videoDetails.title} [${parseInt(bot.nowPlaying.videoDetails.lengthSeconds / 60)}:${(bot.nowPlaying.videoDetails.lengthSeconds % 60).toString().padStart(2, "0")}]\n(added by: ${bot.nowPlaying.added_by})`;
                            vol.classList.remove('hidden');
                            voli.value = bot.defaultVolume;
                            voltxt.innerText = bot.defaultVolume;
                            skp.classList.remove('hidden');
                        };
                        if (bot.audioQueue.length == 0) {
                            ol.innerHTML = '';
                            let olParent = ol.parentNode;
                            olParent.innerText = 'Queue is Empty.';
                            olParent.appendChild(ol);
                        }
                        else {
                            ol.innerHTML = '';
                            for (let i of bot.audioQueue) {
                                let qi = document.createElement('li');
                                    qi.id = `gcAudioQI${bot.audioQueue.indexOf(i)}`;
                                    qi.classList.add('gcAudioQI');
                                    qi.innerText = `${i.videoDetails.title}\n(added by: ${i.added_by})`;
                                    document.getElementById(`gcAudioQOL${bot.guildID}`).appendChild(qi)
                            }
                        }
                    };
                    socket.once('sendBotInfo', (bots) => {
                        for (let b of bots) {
                            setTimeout(addGuild(b), 200);
                        };
                        socket.on('sendBotInfo', (info) => {
                            for (let i of info) {
                                updateInfo(i);
                            }
                        });
                    });
                    socket.on('new-guild', () => {
                        document.getElementById(popupNewGuild).classList.toggle('hidden');
                    });
                    socket.on('rem-client', (guildID) => {
                        let e = document.getElementById(`gCtrl${guildID}`);
                        e.parentNode.removeChild(e);
                    });
            a.articleButton(href='/dash/admin')
                .navlinkText Admin Panel
            h2 Guild Controls:
            .articleItem#guildControlsContainer

    footer
        include ./footer.pug